version: '3.9'

x-common-env: &common-env
  STRUCTS_MONIKER: "${MONIKER}"
  STRUCTS_NETWORK_VERSION: "${NETWORK_VERSION}"
  STRUCTS_CHAIN_ID: "${NETWORK_CHAIN_ID}"

services:
  structsd-network-config:
    image: 'structs/structsd:latest'
    command: ["bash", "/root/scripts/network-config.sh"]
    volumes:
      - chaindata:/root/.structs
      - chainshare:/root/reactor_share
      - chainbackup:/root/reactor_backup
    environment:
      <<: *common-env
  structsd-indexer-config:
    image: 'structs/structsd:latest'
    command: ["bash", "/root/scripts/indexer-config.sh"]
    volumes:
      - chaindata:/root/.structs
    depends_on:
      structsd-network-config:
        condition: service_completed_successfully
      structs-pg:
        condition: service_healthy
        restart: true
    environment:
      <<: *common-env
      STRUCTS_INDEXER_PG_CONNECTION: 'postgres://structs_indexer@structs-pg:5432/structs'
  structsd:
    image: 'structs/structsd:latest'
    hostname: 'structsd'
    volumes:
      - chaindata:/root/.structs
    restart: on-failure
    ports:
      - 26656:26656
      - 26657:26657
      - 1317:1317
    environment:
      <<: *common-env
    healthcheck:
      test: [ "CMD-SHELL", "bash", "/root/scripts/health-check-sync-state.sh" ]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 48h
    depends_on:
      structsd-network-config:
        condition: service_completed_successfully
      structs-pg:
        condition: service_healthy
        restart: true
      structsd-indexer-config:
        condition: service_completed_successfully
  structs-pg:
    image: 'structs/structs-pg:latest'
    hostname: 'structs-pg'
    volumes:
      - pgdata:/var/lib/postgresql/
    ports:
      - ${DIRECT_POSTGRES_PORT}:5432
    restart: on-failure
    healthcheck:
      test: pg_isready
      interval: 20s
      timeout: 10s
      retries: 5
      start_period: 10s
    environment:
      NETWORK_VERSION: '102b'
      GUILD_ID: "${GUILD_ID}"
      GUILD_NAME: "${GUILD_NAME}"
      GUILD_DESCRIPTION: "${GUILD_DESCRIPTION}"
      GUILD_TAG: "${GUILD_TAG}"
      GUILD_LOGO: "${GUILD_LOGO}"
      GUILD_DENOM: "${GUILD_DENOM}"
      GUILD_SOCIALS: "${GUILD_SOCIALS}"
      GUILD_WEBSITE: "${GUILD_WEBSITE}"
      DATABSE_NAME: "${DATABASE_NAME}"
  structs-proxy:
    image: 'structs/structs-proxy:latest'
    hostname: 'structs-proxy'
    restart: on-failure
    ports:
     - ${PROXY_HTTP_PORT}:80
  structs-nats:
    image: nats
    hostname: 'structs-nats'
    restart: on-failure
    ports:
      - 4222:4222
      - 8222:8222
      - 1443:1443
    command: "-c /etc/nats/nats.conf --cluster_name GRASS --cluster nats://0.0.0.0:6222 --http_port 8222 "
    volumes:
      - ./config/nats/:/etc/nats
  structs-grass:
    image: 'structs/structs-grass:latest'
    hostname: 'structs-grass'
    restart: on-failure
    depends_on:
      structs-pg:
        condition: service_started
    environment:
      PG_CHANNEL: 'grass'
      NAT_HOST: 'nats://structs-nats:4222'
      PG_CONNECTION: 'postgres://structs_indexer@structs-pg:5432/structs'
  structs-webapp:
    image: 'structs/structs-webapp:latest'
    hostname: 'structs-webapp'
    restart: on-failure
    ports:
      - ${DIRECT_WEBAPP_HTTP_PORT}:80
    volumes:
      - type: bind
        source: "${WEBAPP_SOURCE}"
        target: /src
    environment:
      DATABASE_URL: 'postgres://structs_webapp@structs-pg:5432/structs?serverVersion=17'
      NAT_URL: 'nats://structs-nats:4222'
  structs-tsa:
    image: 'structs/structs-tsa:latest'
    hostname: 'structs-tsa'
    restart: on-failure
    volumes:
      - tsa-keyring:/var/structs/accounts
    depends_on:
      structs-pg:
        condition: service_healthy
        restart: true
    environment:
      DATABASE_URL: 'postgres://structs_webapp@structs-pg:5432/structs'
      NAT_URL: 'nats://structs-nats:4222'
      AGENT_TARGET_NUMBER: 30
  structs-crawler:
    image: 'structs/structs-crawler:latest'
    hostname: 'structs-crawler'
    restart: on-failure
    depends_on:
      structs-pg:
        condition: service_healthy
        restart: true
    environment:
      DATABASE_URL: 'postgres://structs_crawler@structs-pg:5432/structs'
volumes:
  pgdata:
  chaindata:
    name: structsd-chaindata
  chainshare:
    name: structsd-chainshare
  chainbackup:
    name: structsd-chainbackup
  tsa-keyring: